"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateblankbook"]("main",{

/***/ "./public/js/ui/menu.js":
/*!******************************!*\
  !*** ./public/js/ui/menu.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlaceholderEditMenu: () => (/* binding */ getPlaceholderEditMenu),\n/* harmony export */   getSelectionMenu: () => (/* binding */ getSelectionMenu),\n/* harmony export */   handleDeletePlaceholder: () => (/* binding */ handleDeletePlaceholder),\n/* harmony export */   handleEditOverride: () => (/* binding */ handleEditOverride),\n/* harmony export */   handleEditPlaceholder: () => (/* binding */ handleEditPlaceholder),\n/* harmony export */   handleNewPlaceholder: () => (/* binding */ handleNewPlaceholder),\n/* harmony export */   handlePlaceholderClick: () => (/* binding */ handlePlaceholderClick),\n/* harmony export */   handleReplaceAll: () => (/* binding */ handleReplaceAll),\n/* harmony export */   handleReusePlaceholder: () => (/* binding */ handleReusePlaceholder),\n/* harmony export */   handleTextSelection: () => (/* binding */ handleTextSelection),\n/* harmony export */   hideAllMenus: () => (/* binding */ hideAllMenus),\n/* harmony export */   hideMenu: () => (/* binding */ hideMenu),\n/* harmony export */   initMenuSystem: () => (/* binding */ initMenuSystem),\n/* harmony export */   initMenus: () => (/* binding */ initMenus),\n/* harmony export */   positionMenu: () => (/* binding */ positionMenu)\n/* harmony export */ });\n/* harmony import */ var _core_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/state.js */ \"./public/js/core/state.js\");\n/* harmony import */ var _utils_StringUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/StringUtils.js */ \"./public/js/utils/StringUtils.js\");\n/* harmony import */ var _core_placeholders_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/placeholders.js */ \"./public/js/core/placeholders.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// Start of Selection\n// public/js/ui/menu.js\n\n\n\n\n// Menu element references\nvar selectionMenu;\nvar placeholderEditMenu;\n\n// Helper function to position menu near an element\nvar positionMenu = function positionMenu(menu, rect) {\n  menu.style.display = 'block';\n  var menuWidth = menu.offsetWidth;\n  var menuHeight = menu.offsetHeight;\n  var offset = 5;\n  var desiredTop = rect.bottom + offset + menuHeight <= window.innerHeight ? window.scrollY + rect.bottom + offset : window.scrollY + rect.top - menuHeight - offset;\n  var desiredLeft = window.scrollX + rect.left + rect.width / 2 - menuWidth / 2;\n  desiredLeft = Math.max(window.scrollX + 5, Math.min(desiredLeft, window.scrollX + window.innerWidth - menuWidth - 5));\n  menu.style.top = desiredTop + 'px';\n  menu.style.left = desiredLeft + 'px';\n};\n\n// Hide a menu\nvar hideMenu = function hideMenu(menu) {\n  menu.style.display = 'none';\n};\n\n// Hide all menus\nvar hideAllMenus = function hideAllMenus() {\n  hideMenu(selectionMenu);\n  hideMenu(placeholderEditMenu);\n};\n\n// Reset current editing state\nvar resetCurrentEditing = function resetCurrentEditing() {\n  _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentEditingVariable = null;\n  _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement = null;\n};\n\n// Initialize the context menus\nvar initMenus = function initMenus() {\n  // Create selection menu for text selections\n  selectionMenu = document.createElement('div');\n  selectionMenu.id = 'textSelectionMenu';\n  Object.assign(selectionMenu.style, {\n    position: 'absolute',\n    display: 'none',\n    zIndex: '1000',\n    background: '#fff',\n    border: '1px solid #ccc',\n    padding: '5px',\n    borderRadius: '4px',\n    boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n  });\n  selectionMenu.innerHTML = \"\\n        <button id=\\\"newPlaceholderBtn\\\" class=\\\"btn btn-sm btn-primary\\\">New Placeholder</button>\\n        <button id=\\\"reusePlaceholderBtn\\\" class=\\\"btn btn-sm btn-secondary\\\">Reuse Placeholder</button>\\n      \";\n  document.body.appendChild(selectionMenu);\n\n  // Create placeholder edit menu for modifying existing placeholders\n  placeholderEditMenu = document.createElement('div');\n  placeholderEditMenu.id = 'placeholderEditMenu';\n  Object.assign(placeholderEditMenu.style, {\n    position: 'absolute',\n    display: 'none',\n    zIndex: '1000',\n    background: '#fff',\n    border: '1px solid #ccc',\n    padding: '5px',\n    borderRadius: '4px',\n    boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n  });\n  placeholderEditMenu.innerHTML = \"\\n        <div class=\\\"placeholder-menu-row\\\">\\n          <button id=\\\"editPlaceholderBtn\\\" class=\\\"btn btn-sm btn-primary\\\">Change</button>\\n          <button id=\\\"editOverrideBtn\\\" class=\\\"btn btn-sm btn-secondary\\\">Rename</button>\\n        </div>\\n        <div class=\\\"placeholder-menu-row mt-1\\\">\\n          <button id=\\\"replaceAllBtn\\\" class=\\\"btn btn-sm btn-warning\\\">Replace All</button>\\n          <button id=\\\"deletePlaceholderBtn\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button>\\n        </div>\\n      \";\n  document.body.appendChild(placeholderEditMenu);\n\n  // Attach event listeners\n  attachMenuEventListeners();\n};\n\n// Handle text selection to show the selection menu\nvar handleTextSelection = function handleTextSelection() {\n  setTimeout(function () {\n    var sel = window.getSelection();\n    if (sel && sel.toString().trim().length > 0) {\n      if (sel.anchorNode && sel.anchorNode.parentNode && !sel.anchorNode.parentNode.classList.contains('placeholder')) {\n        _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lastRange = sel.getRangeAt(0);\n        var rect = _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lastRange.getBoundingClientRect();\n        positionMenu(selectionMenu, rect);\n      }\n    } else {\n      hideMenu(selectionMenu);\n    }\n  }, 0);\n};\n\n// Show the placeholder edit menu when a placeholder is clicked\nvar handlePlaceholderClick = function handlePlaceholderClick(e) {\n  if (e.target.classList.contains('placeholder')) {\n    // Stop propagation so that other handlers (e.g. selection menu) do not interfere\n    e.stopPropagation();\n    // Find the corresponding variable using the data-id attribute\n    _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentEditingVariable = _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].variables.find(function (v) {\n      return v.id === e.target.getAttribute('data-id');\n    });\n    _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement = e.target;\n    // Position the placeholder edit menu near the clicked element\n    positionMenu(placeholderEditMenu, e.target.getBoundingClientRect());\n  }\n};\n\n// Handle delete button click in placeholder edit menu\nvar handleDeletePlaceholder = function handleDeletePlaceholder() {\n  hideMenu(placeholderEditMenu);\n  if (_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement) {\n    _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement.remove();\n  }\n  // Update the variables in the editor after deletion\n  if (typeof _core_placeholders_js__WEBPACK_IMPORTED_MODULE_2__.updateVariablesFromEditor === 'function') {\n    (0,_core_placeholders_js__WEBPACK_IMPORTED_MODULE_2__.updateVariablesFromEditor)();\n  }\n  resetCurrentEditing();\n};\n\n// Handle edit placeholder button click\nvar handleEditPlaceholder = function handleEditPlaceholder() {\n  hideMenu(placeholderEditMenu);\n  _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEditingPlaceholder = true;\n  // Open the modal so the user can select a new placeholder type\n  $('#placeholderModal').modal('show');\n  resetCurrentEditing();\n};\n\n// Handle edit override button click\nvar handleEditOverride = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _yield$Swal$fire, newOverride;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          hideMenu(placeholderEditMenu);\n          _context.next = 3;\n          return Swal.fire({\n            title: 'Change Override',\n            input: 'text',\n            inputLabel: 'Enter new override text',\n            inputValue: _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement ? _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement.textContent : ''\n          });\n        case 3:\n          _yield$Swal$fire = _context.sent;\n          newOverride = _yield$Swal$fire.value;\n          if (newOverride !== undefined) {\n            if (_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement) {\n              _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement.textContent = newOverride;\n            }\n            if (_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentEditingVariable) {\n              _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentEditingVariable.displayOverride = newOverride;\n            }\n            if (typeof _core_placeholders_js__WEBPACK_IMPORTED_MODULE_2__.updateVariablesList === 'function') {\n              (0,_core_placeholders_js__WEBPACK_IMPORTED_MODULE_2__.updateVariablesList)();\n            }\n          }\n          resetCurrentEditing();\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function handleEditOverride() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// Handle \"New Placeholder\" button click\nvar handleNewPlaceholder = function handleNewPlaceholder() {\n  // Reset any previously saved selection data\n  _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lastSelectedText = '';\n\n  // Save the current selected text to state before hiding the selection menu\n  var sel = window.getSelection();\n  if (sel && sel.toString().trim().length > 0) {\n    _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lastSelectedText = sel.toString().trim();\n    console.log(\"Selection menu: Saved selected text:\", _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lastSelectedText);\n  } else {\n    console.log(\"Selection menu: No text selected\");\n  }\n  hideMenu(selectionMenu);\n  $('#placeholderModal').modal('show');\n};\n\n// Handle \"Reuse Placeholder\" button click\nvar handleReusePlaceholder = function handleReusePlaceholder() {\n  // Reset any previously saved selection data\n  _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lastSelectedText = '';\n\n  // Save the current selected text to state before hiding the selection menu\n  var sel = window.getSelection();\n  if (sel && sel.toString().trim().length > 0) {\n    _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lastSelectedText = sel.toString().trim();\n    console.log(\"Reuse placeholder menu: Saved selected text:\", _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lastSelectedText);\n  } else {\n    console.log(\"Reuse placeholder menu: No text selected\");\n  }\n  hideMenu(selectionMenu);\n  if (_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].variables.length === 0) {\n    Swal.fire('No existing placeholders', 'There are no placeholders to reuse yet.', 'info');\n    return;\n  }\n  var sortedVariables = _toConsumableArray(_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].variables).sort(function (a, b) {\n    return (_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].usageTracker[b.id] || 0) - (_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].usageTracker[a.id] || 0) || a.order - b.order;\n  });\n  var html = \"<div id=\\\"reusePlaceholderContainer\\\" style=\\\"display: flex; flex-wrap: wrap;\\\">\";\n  sortedVariables.forEach(function (v) {\n    var displayText = v.displayOverride || v.officialDisplay;\n    html += \"<button type=\\\"button\\\" \\n                       class=\\\"btn btn-outline-secondary btn-sm m-1 reuse-placeholder-btn\\\" \\n                       data-id=\\\"\".concat(v.id, \"\\\" \\n                       title=\\\"\").concat(v.id, \"\\\">\\n                 \").concat(displayText, \"\\n               </button>\");\n  });\n  html += \"</div>\";\n  Swal.fire({\n    title: 'Select a placeholder to reuse',\n    html: html,\n    showCancelButton: true,\n    showConfirmButton: false,\n    didOpen: function didOpen() {\n      var container = Swal.getHtmlContainer();\n      var btns = container.querySelectorAll('.reuse-placeholder-btn');\n      btns.forEach(function (button) {\n        button.addEventListener('click', function () {\n          var id = button.getAttribute('data-id');\n          var variable = _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].variables.find(function (v) {\n            return v.id === id;\n          });\n          if (variable) (0,_core_placeholders_js__WEBPACK_IMPORTED_MODULE_2__.duplicatePlaceholder)(variable);\n          Swal.close();\n        });\n      });\n    }\n  });\n};\n\n// Handle \"Replace All\" button click in placeholder edit menu\nvar handleReplaceAll = function handleReplaceAll() {\n  hideMenu(placeholderEditMenu);\n\n  // Make sure we have the current placeholder element and variable\n  if (!_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement || !_core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentEditingVariable) {\n    console.error(\"Missing placeholder element or variable for replace all\");\n    resetCurrentEditing();\n    return;\n  }\n\n  // Get the text from the placeholder\n  var placeholderText = _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentPlaceholderElement.textContent.trim();\n  if (!placeholderText) {\n    console.error(\"Placeholder has no text to search for\");\n    resetCurrentEditing();\n    return;\n  }\n  var placeholderId = _core_state_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentEditingVariable.id;\n  if (!placeholderId) {\n    console.error(\"Placeholder has no ID\");\n    resetCurrentEditing();\n    return;\n  }\n\n  // Count occurrences of the text in the editor\n  var editor = document.getElementById(\"storyText\");\n  var editorContent = editor.textContent;\n  var occurrences = (editorContent.match(new RegExp(\"\\\\b\".concat(_utils_StringUtils_js__WEBPACK_IMPORTED_MODULE_1__.StringUtils.escapeRegExp(placeholderText), \"\\\\b\"), 'g')) || []).length;\n\n  // If there's only one occurrence (the placeholder itself), notify the user\n  if (occurrences <= 1) {\n    Swal.fire({\n      title: 'No other occurrences found',\n      text: \"No other instances of \\\"\".concat(placeholderText, \"\\\" were found in your story.\"),\n      icon: 'info'\n    });\n    resetCurrentEditing();\n    return;\n  }\n\n  // Ask user to confirm replacing all occurrences\n  Swal.fire({\n    title: 'Multiple occurrences found',\n    html: \"Found <strong>\".concat(occurrences - 1, \"</strong> other instance(s) of \\\"<strong>\").concat(placeholderText, \"</strong>\\\" in your story.<br>Would you like to replace all these instances with this placeholder?\"),\n    icon: 'question',\n    showCancelButton: true,\n    confirmButtonText: 'Yes, replace all',\n    cancelButtonText: 'No, cancel'\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      console.log(\"Replacing all occurrences of \\\"\".concat(placeholderText, \"\\\" with placeholder \").concat(placeholderId));\n\n      // Use the existing function to perform the replacement\n      (0,_core_placeholders_js__WEBPACK_IMPORTED_MODULE_2__.applyPlaceholderToAllOccurrences)(placeholderText, placeholderId, placeholderText);\n    }\n  });\n  resetCurrentEditing();\n};\n\n// Attach event listeners to the menu elements\nvar attachMenuEventListeners = function attachMenuEventListeners() {\n  // Click outside menus to close them\n  document.addEventListener('click', function (e) {\n    if (!selectionMenu.contains(e.target) && !placeholderEditMenu.contains(e.target)) {\n      hideAllMenus();\n    }\n  });\n\n  // Text selection events\n  document.getElementById('storyText').addEventListener('mouseup', handleTextSelection);\n\n  // Placeholder click events\n  document.getElementById('storyText').addEventListener('click', handlePlaceholderClick);\n\n  // Menu button event handlers\n  document.getElementById('newPlaceholderBtn').addEventListener('click', handleNewPlaceholder);\n  document.getElementById('reusePlaceholderBtn').addEventListener('click', handleReusePlaceholder);\n  document.getElementById('editPlaceholderBtn').addEventListener('click', handleEditPlaceholder);\n  document.getElementById('editOverrideBtn').addEventListener('click', handleEditOverride);\n  document.getElementById('deletePlaceholderBtn').addEventListener('click', handleDeletePlaceholder);\n  document.getElementById('replaceAllBtn').addEventListener('click', handleReplaceAll);\n};\n\n// Export menu elements for external access if needed\nvar getSelectionMenu = function getSelectionMenu() {\n  return selectionMenu;\n};\nvar getPlaceholderEditMenu = function getPlaceholderEditMenu() {\n  return placeholderEditMenu;\n};\n\n// Export the initialization of menus to be called from main.js\nvar initMenuSystem = function initMenuSystem() {\n  // Create menus if they don't exist yet\n  if (!selectionMenu || !placeholderEditMenu) {\n    initMenus();\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/js/ui/menu.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("3c0df30735d163a556ed")
/******/ })();
/******/ 
/******/ }
);